import pandas as pd
import os
import psycopg2
from datetime import datetime
import uuid
import time

def wait_for_database(max_retries=10, retry_interval=5):
    """–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    for attempt in range(max_retries):
        try:
            conn = psycopg2.connect(
                host="localhost",
                port="5432", 
                dbname="geo_photo_db",
                user="admin",
                password="admin123",
                connect_timeout=5
            )
            cursor = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
            cursor.execute("""
                SELECT COUNT(*) 
                FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name IN ('users', 'datasets', 'photo_metadata')
            """)
            
            table_count = cursor.fetchone()[0]
            
            if table_count >= 3:
                print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!")
                cursor.close()
                conn.close()
                return True
            else:
                print(f"‚è≥ –¢–∞–±–ª–∏—Ü—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã ({table_count}/3), –∂–¥–µ–º...")
                
        except Exception as e:
            print(f"‚è≥ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries}): {e}")
        
        time.sleep(retry_interval)
    
    print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≥–æ—Ç–æ–≤–∞ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫")
    return False

def import_existing_data():
    """–ò–º–ø–æ—Ä—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel –∏ –ø–∞–ø–æ–∫"""
    
    # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î
    if not wait_for_database():
        return
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    try:
        conn = psycopg2.connect(
            host="localhost",
            port="5432",
            dbname="geo_photo_db", 
            user="admin",
            password="admin123"
        )
        cursor = conn.cursor()
        
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–æ–≤
        excel_files = [
            "data/raw/dataset_1/18-001_gin_building_echd_19.08.25.xlsx",
            "data/raw/dataset_2/19-001_gin_garbage_echd_19.08.25.xlsx"
        ]
        
        for excel_file in excel_files:
            if os.path.exists(excel_file):
                print(f"üìä –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ {excel_file}")
                import_excel_data(cursor, conn, excel_file)
            else:
                print(f"‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {excel_file}")
        
        # –ò–º–ø–æ—Ä—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ—Ç–æ –∏–∑ –ø–∞–ø–æ–∫
        photo_folders = [
            "data/raw/dataset_1/18-001_gin_building_echd_19.08.25",
            "data/raw/dataset_2/19-001_gin_garbage_echd_19.08.25", 
            "data/raw/bpla_bbox"
        ]
        
        for folder in photo_folders:
            if os.path.exists(folder):
                print(f"üì∏ –ò–º–ø–æ—Ä—Ç —Ñ–æ—Ç–æ –∏–∑ {folder}")
                import_photos_from_folder(cursor, conn, folder)
            else:
                print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {folder}")
        
        conn.commit()
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        if 'conn' in locals():
            conn.rollback()
    finally:
        if 'cursor' in locals():
            cursor.close()
        if 'conn' in locals():
            conn.close()

def import_excel_data(cursor, conn, excel_file):
    """–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel —Ñ–∞–π–ª–∞"""
    try:
        # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
        df = pd.read_excel(excel_file)
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(df)} –∑–∞–ø–∏—Å–µ–π –≤ {excel_file}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        print("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:")
        for col in df.columns:
            sample_value = df[col].iloc[0] if len(df) > 0 else 'N/A'
            print(f"  - {col}: {df[col].dtype}, –ø—Ä–∏–º–µ—Ä: {sample_value}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞—Ç–∞—Å–µ—Ç–∞ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        if "building" in excel_file.lower():
            dataset_type = "building"
            dataset_name = "dataset_1_buildings"
        elif "garbage" in excel_file.lower():
            dataset_type = "garbage" 
            dataset_name = "dataset_2_garbage"
        else:
            dataset_type = "unknown"
            dataset_name = os.path.basename(excel_file).replace('.xlsx', '')
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç
        dataset_id = get_or_create_dataset(cursor, conn, dataset_name, dataset_type)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å–∏ –∏–∑ Excel
        imported_count = 0
        for index, row in df.iterrows():
            try:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏
                filename = row['–ò–º—è —Ñ–∞–π–ª–∞']
                latitude = row['latitude'] if pd.notna(row['latitude']) else None
                longitude = row['longitude'] if pd.notna(row['longitude']) else None
                camera_id = row['camera'] if pd.notna(row['camera']) else None
                
                # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
                folder_name = "dataset_1" if dataset_type == "building" else "dataset_2"
                file_path = f"data/raw/{folder_name}/{os.path.basename(excel_file).replace('.xlsx', '')}/{filename}"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
                file_exists = os.path.exists(file_path)
                
                # –í—Å—Ç–∞–≤–ª—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ —Ñ–æ—Ç–æ
                cursor.execute("""
                    INSERT INTO photo_metadata 
                    (dataset_id, original_filename, file_path, file_size, 
                     gps_latitude, gps_longitude, processing_status)
                    VALUES (%s, %s, %s, %s, %s, %s, %s)
                    ON CONFLICT (file_path) DO UPDATE SET
                    gps_latitude = EXCLUDED.gps_latitude,
                    gps_longitude = EXCLUDED.gps_longitude,
                    updated_at = CURRENT_TIMESTAMP
                """, (
                    dataset_id,
                    filename,
                    file_path,
                    os.path.getsize(file_path) if file_exists else 0,
                    latitude,
                    longitude,
                    'pending' if file_exists else 'file_not_found'
                ))
                
                imported_count += 1
                
                if imported_count % 100 == 0:
                    print(f"  ‚è≥ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {imported_count} –∑–∞–ø–∏—Å–µ–π...")
                    conn.commit()
                    
            except Exception as e:
                print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ {index}: {e}")
                continue
        
        print(f"  ‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ {imported_count} –∑–∞–ø–∏—Å–µ–π –∏–∑ Excel")
        conn.commit()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è Excel {excel_file}: {e}")
        raise

def get_or_create_dataset(cursor, conn, dataset_name, dataset_type):
    """–ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç"""
    try:
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –¥–∞—Ç–∞—Å–µ—Ç
        cursor.execute("SELECT id FROM datasets WHERE name = %s", (dataset_name,))
        result = cursor.fetchone()
        
        if result:
            return result[0]
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç
            cursor.execute("""
                INSERT INTO datasets (name, description, source_type, created_by) 
                VALUES (%s, %s, %s, %s) 
                RETURNING id
            """, (
                dataset_name,
                f"–î–∞—Ç–∞—Å–µ—Ç {dataset_type} –∏–∑ –∏–º–ø–æ—Ä—Ç–∞",
                'archive', 
                1
            ))
            dataset_id = cursor.fetchone()[0]
            conn.commit()
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç: {dataset_name} (ID: {dataset_id})")
            return dataset_id
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞—Ç–∞—Å–µ—Ç–∞ {dataset_name}: {e}")
        raise

def import_photos_from_folder(cursor, conn, folder_path):
    """–ò–º–ø–æ—Ä—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ—Ç–æ –∏–∑ –ø–∞–ø–∫–∏"""
    try:
        photo_extensions = ['.jpg', '.jpeg', '.png', '.JPG', '.JPEG', '.PNG']
        
        dataset_name = os.path.basename(folder_path)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç
        dataset_id = get_or_create_dataset(cursor, conn, dataset_name, "folder_import")
        
        # –°–∫–∞–Ω–∏—Ä—É–µ–º –ø–∞–ø–∫—É —Å —Ñ–æ—Ç–æ
        photo_count = 0
        for filename in os.listdir(folder_path):
            if any(filename.lower().endswith(ext) for ext in photo_extensions):
                file_path = os.path.join(folder_path, filename)
                
                try:
                    # –í—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ —Ñ–æ—Ç–æ
                    cursor.execute("""
                        INSERT INTO photo_metadata 
                        (dataset_id, original_filename, file_path, file_size, processing_status)
                        VALUES (%s, %s, %s, %s, %s)
                        ON CONFLICT (file_path) DO NOTHING
                    """, (
                        dataset_id,
                        filename,
                        file_path,
                        os.path.getsize(file_path),
                        'pending'
                    ))
                    
                    if cursor.rowcount > 0:
                        photo_count += 1
                    
                    if photo_count % 100 == 0:
                        print(f"  ‚è≥ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {photo_count} —Ñ–æ—Ç–æ...")
                        conn.commit()
                        
                except Exception as e:
                    print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞ {filename}: {e}")
                    continue
        
        conn.commit()
        print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {photo_count} —Ñ–æ—Ç–æ –≤ –¥–∞—Ç–∞—Å–µ—Ç '{dataset_name}'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏–∑ –ø–∞–ø–∫–∏ {folder_path}: {e}")
        raise

if __name__ == "__main__":
    import_existing_data()